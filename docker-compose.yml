version: "3.9"

services:
  server:
    container_name: find-a-pair-server
    image: find-a-pair-server
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVER_PORT: ${SERVER_PORT}
    ports:
        - "${SERVER_PORT}:${SERVER_PORT}"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
  postgres:
    image: postgres:15.1
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
          test: [ "CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER" ]
          interval: 10s
          timeout: 5s
          retries: 5
  client:
    image: nginx:latest
    build:
      context: .
      dockerfile: nginx.Dockerfile
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    restart: always
    depends_on:
      - server

volumes:
  pgadmin-data:

networks:
  awesome:
    driver: bridge
